% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/minmaxPareto.R
\name{minmaxPareto}
\alias{minmaxPareto}
\title{Pareto minimum and maximum values}
\usage{
minmaxPareto(osc, candi, covars)
}
\arguments{
\item{osc}{A list of objects of class \code{OptimizedSampleConfiguration} (OSC). Each OSC of the list must
be named after the objective function with which it has been optimized. For example, 
\code{osc = list(CORR = osc_corr, DIST = osc_dist)}.}

\item{candi}{Data frame or matrix with the candidate locations for the jittered points. \code{candi} must 
have two columns in the following order: \code{[, "x"]} the projected x-coordinates, and \code{[, "y"]} the 
projected y-coordinates.}

\item{covars}{Data frame or matrix with the covariates in the columns.}
}
\value{
A data frame with the Pareto minimum and maximum values.
}
\description{
Compute the minimum and maximum attainable values of the objective functions that compose a multi-objective 
combinatorial optimization problem.
}
\details{
The minimum and maximum attainable values of the objective functions that compose a multi-objective 
combinatorial optimization problem (MOCOP) are also known as the Pareto minimum and maximum values. 
The Pareto minimum and maximum values are used to scale the objective functions to the same approximate 
range of values using the \emph{upper-lower-bound approach} so that they can be correctly aggregated into a 
single \emph{utility function} using the \emph{weighted sum method}. Scalling the objective functions to 
the same approximate range of values is necessary to avoid the numerical dominance of those objective 
functions whose values have the largest magnitude among all objective functions. Eliminating the chance of
numerical dominance guarantees that the weights will play the wanted role during the optimization.
}
\examples{
\dontrun{
# This example takes more than 5 seconds
require(sp)
data(meuse.grid)
candi <- meuse.grid[, 1:2]
covars <- meuse.grid[, c(1, 2)]

# CORR
schedule <- scheduleSPSANN(initial.acceptance = 0.1, chains = 1, 
                           x.max = 1540, y.max = 2060, x.min = 0,
                           y.min = 0, cellsize = 40)
set.seed(2001)
osc_corr <- optimCORR(points = 10, candi = candi, covars = covars, 
                      schedule = schedule)

# DIST
set.seed(2001)
osc_dist <- optimDIST(points = 10, candi = candi, covars = covars,
                      schedule = schedule)

# PPL
set.seed(2001)
osc_ppl <- optimPPL(points = 10, candi = candi, schedule = schedule)

# MSSD
set.seed(2001)
osc_mssd <- optimMSSD(points = 10, candi = candi, schedule = schedule)

# Pareto
pareto <- minmaxPareto(osc = list(DIST = osc_dist, CORR = osc_corr,
                                  PPL = osc_ppl, MSSD = osc_mssd),
                       candi = candi, covars = covars)
pareto
}
}
\author{
Alessandro Samuel-Rosa \email{alessandrosamuelrosa@gmail.com}
}
\seealso{
\code{\link[spsann]{optimACDC}}, \code{\link[spsann]{SPAN}}
}

