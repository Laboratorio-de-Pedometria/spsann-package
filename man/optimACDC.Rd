% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/optimACDC.R
\name{optimACDC}
\alias{optimACDC}
\title{Optimization of sample patterns for trend estimation}
\usage{
optimACDC(points, candidates, covars, continuous = TRUE,
  weights = list(strata = 0.5, correl = 0.5), use.coords = FALSE,
  strata.type = "equal.area", sim.nadir = 1000, x.max, x.min, y.max, y.min,
  iterations, acceptance = list(initial = 0.99, cooling = iterations/10),
  stopping = list(max.count = iterations/10), plotit = TRUE, boundary,
  progress = TRUE, verbose = TRUE)
}
\arguments{
\item{points}{Integer. The number of points. Alternatively, a data.frame or
matrix with three columns: 1) the identification of each point
(1, 2, ..., n), 2) the x coordinates, and 3) the y coordinates. The
coordinates must be projected. If a data.frame or matrix is used,
\code{points} must be a subset of \code{candidates}.}

\item{candidates}{data.frame or matrix. The candidate locations for the
sample points.}

\item{covars}{Data frame or matrix with the covariates in the columns.}

\item{continuous}{Logical. Are the covariates \sQuote{continuous} or
\sQuote{categorical}. Defaults to \code{continuous = TRUE}.}

\item{weights}{List with two sub-arguments. The weights assigned to the
sampling strata/classes and the correlation/association measure. They must
sum to unity. Defaults to \code{weights = list(strata = 0.5, correl = 0.5)}.}

\item{use.coords}{Logical. Should the coordinates be used as covariates?
Defaults to \code{use.coords = FALSE}.}

\item{strata.type}{Character. The type of strata to be used with
continuous covariates. Available options are \code{"equal.area"} and
\code{"equal.range"}. Defaults to \code{strata.type = "equal.area"}. See
\sQuote{Details} for more information.}

\item{sim.nadir}{Integer. Number of random realizations to estimate the
nadir point. Defaults to \code{sim.nadir = 1000}. \sQuote{Details} for more
information.}

\item{x.max,x.min,y.max,y.min}{Numeric. The minimum and maximum quantity of
random noise to be added to the x and y coordinates. The minimum quantity
must be equal to, at least, the minimum distance between two neighboring
candidate locations. The units are the same as of the coordinates.}

\item{iterations}{Integer. The maximum number of iterations that should be
used for the optimization.}

\item{acceptance}{List with two sub-arguments: \code{initial} and
\code{cooling}. \code{initial} is a numeric value between 0 and 1 defining
the initial acceptance probability. Defaults to \code{initial = 0.99}.
\code{cooling} is a numeric value defining the exponential factor by with
the acceptance probability decreases at each iteration. Defaults to
\code{cooling = iterations / 10}.}

\item{stopping}{List with one sub-argument: \code{max.count}.
\code{max.count} is an integer value defining the maximum allowable number
of iterations without improvement of the objective function value. Defaults
to \code{max.count = iterations / 10}.}

\item{plotit}{Logical for ploting the optimization results. This includes
a) the progress of the objective function values and acceptance
probabilities, and b) the original points, the perturbed points and the
progress of the maximum perturbation in the x and y coordinates. The plots
are updated at each 10 iterations. Defaults to \code{plotit = TRUE}.}

\item{boundary}{SpatialPolygon. The boundary of the spatial domain.
Mandatory if \code{plotit = TRUE}.}

\item{progress}{Logical for printing a progress bar. Defaults to
\code{progress = TRUE}.}

\item{verbose}{Logical for printing messages about the progress of the
optimization.}
}
\value{
\code{optimACDC} returns a matrix: the optimized sample pattern with
the evolution of the energy state during the optimization as an attribute.
}
\description{
Optimize a sample pattern for trend estimaton. The criterion used is
matching the association/correlation and marginal distribution of the
covariates (\code{optimACDC}).
}
\details{
This method is also known as the conditioned Latin Hypercube of Minasny and
McBratney (2006). Visit the package manual to see the corrections that we
have made in that method.
}
\examples{
require(sp)
require(rgeos)
data(meuse.grid)
candidates <- meuse.grid[, 1:2]
coordinates(candidates) <- ~ x + y
gridded(candidates) <- TRUE
boundary <- as(candidates, "SpatialPolygons")
boundary <- gUnionCascaded(boundary)
candidates <- coordinates(candidates)
candidates <- matrix(cbind(c(1:dim(candidates)[1]), candidates), ncol = 3)
covars <- meuse.grid[, c(1, 2, 3, 4, 5)]
points <- 100
x.max <- diff(bbox(boundary)[1, ])
y.min <- x.min <- 40
y.max <- diff(bbox(boundary)[2, ])
res <- optimACDC(points, candidates, covars, x.max = x.max,
                 x.min = x.min, y.max = y.max, y.min = y.min,
                 boundary = boundary, sim.nadir = 10, iterations = 100)
}
\author{
Alessandro Samuel-Rosa \email{alessandrosamuelrosa@gmail.com}
}
\references{
Minasny, B.; McBratney, A. B. A conditioned Latin hypercube method for
sampling in the presence of ancillary information. \emph{Computers &
Geosciences}, v. 32, p. 1378-1388, 2006.

Minasny, B.; McBratney, A. B. Conditioned Latin Hypercube Sampling for
calibrating soil sensor data to soil properties. Chapter 9. Viscarra Rossel,
R. A.; McBratney, A. B.; Minasny, B. (Eds.) \emph{Proximal Soil Sensing}.
Amsterdam: Springer, p. 111-119, 2010.

Mulder, V. L.; de Bruin, S.; Schaepman, M. E. Representing major soil
variability at regional scale by constrained Latin hypercube sampling of
remote sensing data. \emph{International Journal of Applied Earth Observation
and Geoinformation}, v. 21, p. 301-310, 2013.

Roudier, P.; Beaudette, D.; Hewitt, A. A conditioned Latin hypercube sampling
algorithm incorporating operational constraints. \emph{5th Global Workshop on
Digital Soil Mapping}. Sydney: p. 227-231, 2012.
}
\seealso{
\code{\link[clhs]{clhs}}
}
\concept{
simulated annealing
}
\keyword{optimize}
\keyword{spatial}

