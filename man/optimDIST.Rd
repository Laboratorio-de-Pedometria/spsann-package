% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/optimDIST.R
\name{optimDIST}
\alias{objDIST}
\alias{optimDIST}
\title{Optimization of sample configurations for spatial trend identification and
estimation}
\usage{
optimDIST(points, candi, iterations = 100, covars, strata.type = "area",
  use.coords = FALSE, x.max, x.min, y.max, y.min, acceptance = list(initial
  = 0.99, cooling = iterations/10), stopping = list(max.count =
  iterations/10), plotit = FALSE, track = FALSE, boundary,
  progress = TRUE, verbose = FALSE, greedy = FALSE, weights = NULL,
  nadir = NULL, utopia = NULL)

objDIST(points, candi, covars, strata.type = "area", use.coords = FALSE)
}
\arguments{
\item{points}{Integer value, integer vector, data frame or matrix. If
\code{points} is an integer value, it defines the number of points that
should be randomly sampled from \code{candi} to form the starting system
configuration. If \code{points} is a vector of integer values, it contains
the row indexes of \code{candi} that correspond to the points that form the
starting system configuration. If \code{points} is a data frame or matrix,
it must have three columns in the following order: \code{[, "id"]} the
row indexes of \code{candi} that correspond to each point, \code{[, "x"]}
the projected x-coordinates, and \code{[, "y"]} the projected y-coordinates.
Note that in the later case, \code{points} must be a subset of \code{candi}.}

\item{candi}{Data frame or matrix with the candidate locations for the
perturbed points. \code{candi} must have two columns in the following
order: \code{[, "x"]} the projected x-coordinates, and \code{[, "y"]} the
projected y-coordinates.}

\item{iterations}{Integer. The maximum number of iterations that should be
used for the optimization. Defaults to \code{iterations = 100}.}

\item{covars}{Data frame or matrix with the covariates in the columns.}

\item{strata.type}{Character value setting the type of stratification that
should be used to create the marginal sampling strata (or factor levels) for
the numeric covariates. Available options are \code{"area"} for equal-area,
and \code{"range"} for equal-range. Defaults to \code{strata.type = "area"}.}

\item{use.coords}{Logical value. Should the geographic coordinates be used
as covariates? Defaults to \code{use.coords = FALSE}.}

\item{x.max,x.min,y.max,y.min}{Numeric value. The minimum and maximum
quantity of random noise to be added to the projected x- and y-coordinates.
The minimum quantity should be equal to, at least, the minimum distance
between two neighbouring candidate locations. The units are the same as of
the projected x- and y-coordinates. If missing, they are estimated from
\code{candi}.}

\item{acceptance}{List with two named sub-arguments: \code{initial} --
numeric value between 0 and 1 defining the initial acceptance probability,
and \code{cooling} -- a numeric value defining the exponential factor by
witch the acceptance probability decreases at each iteration. Defaults to
\code{acceptance = list(initial = 0.99, cooling = iterations / 10)}.}

\item{stopping}{List with one named sub-argument: \code{max.count} --
integer value defining the maximum allowable number of iterations without
improvement of the objective function value. Defaults to
\code{stopping = list(max.count = iterations / 10)}.}

\item{plotit}{Logical for plotting the optimization results. This includes
a) the progress of the objective function values and acceptance
probabilities, and b) the original points, the perturbed points and the
progress of the maximum perturbation in the x- and y-coordinates. The plots
are updated at each 10 iterations. Defaults to \code{plotit = FALSE}.}

\item{track}{Logical value. Should the evolution of the energy state and
acceptance probability be recorded and returned with the result? If
\code{track = FALSE} (the default), only the starting and ending enery state
values are returned with the result.}

\item{boundary}{SpatialPolygon. The boundary of the spatial domain.
If missing, it is estimated from \code{candi}.}

\item{progress}{Logical for printing a progress bar. Defaults to
\code{progress = TRUE}.}

\item{verbose}{Logical for printing messages about the progress of the
optimization. Defaults to \code{verbose = FALSE}.}

\item{greedy}{Logical value. Should the optimization be done using a greedy
algorithm, that is, accepting only better system configurations? Defaults
to \code{greedy = FALSE}. (experimental)}

\item{weights}{List with named sub-arguments. The weights assigned to each
one of the objective functions that form the multi-objective optimization
problem (MOOP). They must be named after the respective objective function
to which they apply. The weights must be equal to or larger than 0 and sum
to 1. The default option gives equal weights to all objective functions.}

\item{nadir}{List with named sub-arguments. Three options are available:
1) \code{sim} -- the number of simulations that should be used to estimate
the nadir point, and \code{seeds} -- vector defining the random seeds for
each simulation; 2) \code{user} -- a list of user-defined nadir values named
after the respective objective function to which they apply; 3) \code{abs}
-- logical for calculating the nadir point internally (experimental).}

\item{utopia}{List with named sub-arguments. Two options are available: 1)
\code{user} -- a list of user-defined values named after the respective
objective function to which they apply; 2) \code{abs} -- logical for
calculating the utopia point internally (experimental).}
}
\value{
\code{optimDIST} returns a matrix: the optimized sample configuration.

\code{objDIST} returns a numeric value: the energy state of the sample
configuration - the objective function value.
}
\description{
Optimize a sample configuration for spatial trend identification and
estimation. A criterion is defined so that the sample reproduces the
marginal distribution of the covariates (\bold{DIST}).
}
\details{
Reproducing the marginal distribution of the numeric covariates depends upon
the definition of marginal sampling strata. These marginal sampling strata
are also used to define the factor levels of any numeric covariate when they
are passed together with factor covariates (see more details at
\code{optimDist}).

Two types of marginal sampling strata can be used. \emph{Equal-area}
sampling strata are defined using the sample quantiles estimated with
\code{\link[stats]{quantile}} using a discontinuous function
(\code{type = 3}). This is to avoid creating breakpoints that do not occur
in the population of existing covariate values.

The function \code{\link[stats]{quantile}} commonly produces repeated
break points. A break point will always be repeated if that value has a
relatively high frequency in the population of covariate values. The number
of repeated break points increases with the number of marginal sampling
strata. Only unique break points are used to create marginal sampling strata.

\emph{Equal-range} sampling strata are defined breaking the range of
covariate values into pieces of equal size. This method usually creates
break points that do not occur in the population of existing covariate
values. Such break points are replaced by the nearest existing covariate
value identified using Euclidean distances.

Both stratification methods can produce marginal sampling strata that cover
a range of values that do not exist in the population of covariate values.
Any empty marginal sampling strata is merged with the closest non-empty
marginal sampling strata. These are identified using Euclidean distances.

The approaches used to define the marginal sampling strata result in each
numeric covariate having a different number of marginal sampling strata,
some of them with different area/size. Because the goal is to have a sample
that reproduces the marginal distribution of the covariate, each marginal
sampling strata will have a different number of sample points. The wanted
distribution of the number of sample points per marginal strata is estimated
empirically computing the proportion of points of the population of existing
covariate values that fall in each marginal sampling strata.
}
\note{
We recommend using the Pareto maximum and minimum values to set the nadir
and utopia points in multi-objective optimization problems. Using
simulations is sub-optimal.
}
\examples{
require(sp)
data(meuse.grid)
candi <- meuse.grid[, 1:2]
covars <- meuse.grid[, 5]
set.seed(2001)
res <- optimDIST(points = 100, candi = candi, covars = covars,
                 use.coords = TRUE)
tail(attr(res, "energy"), 1) # 1.6505
objDIST(points = res, candi = candi, covars = covars, use.coords = TRUE)
}
\author{
Alessandro Samuel-Rosa \email{alessandrosamuelrosa@gmail.com}
}
\references{
CramÃ©r, H. \emph{Mathematical methods of statistics}. Princeton: Princeton
University Press, p. 575, 1946.

Everitt, B. S. \emph{The Cambridge dictionary of statistics}. Cambridge:
Cambridge University Press, p. 432, 2006.

Hyndman, R. J.; Fan, Y. Sample quantiles in statistical packages. \emph{The
American Statistician}, v. 50, p. 361-365, 1996.

Minasny, B.; McBratney, A. B. A conditioned Latin hypercube method for
sampling in the presence of ancillary information. \emph{Computers &
Geosciences}, v. 32, p. 1378-1388, 2006.

Minasny, B.; McBratney, A. B. Conditioned Latin Hypercube Sampling for
calibrating soil sensor data to soil properties. Chapter 9. Viscarra Rossel,
R. A.; McBratney, A. B.; Minasny, B. (Eds.) \emph{Proximal Soil Sensing}.
Amsterdam: Springer, p. 111-119, 2010.

Mulder, V. L.; de Bruin, S.; Schaepman, M. E. Representing major soil
variability at regional scale by constrained Latin hypercube sampling of
remote sensing data. \emph{International Journal of Applied Earth Observation
and Geoinformation}, v. 21, p. 301-310, 2013.

Roudier, P.; Beaudette, D.; Hewitt, A. A conditioned Latin hypercube sampling
algorithm incorporating operational constraints. \emph{5th Global Workshop on
Digital Soil Mapping}. Sydney, p. 227-231, 2012.

Arora, J. \emph{Introduction to optimum design}. Waltham: Academic Press, p.
896, 2011.

Marler, R. T.; Arora, J. S. Survey of multi-objective optimization methods
for engineering. \emph{Structural and Multidisciplinary Optimization}, v. 26,
p. 369-395, 2004.

Marler, R. T.; Arora, J. S. Function-transformation methods for
multi-objective optimization. \emph{Engineering Optimization}, v. 37, p.
551-570, 2005.

Marler, R. T.; Arora, J. S. The weighted sum method for multi-objective
optimization: new insights. \emph{Structural and Multidisciplinary
Optimization}, v. 41, p. 853-862, 2009.
}
\seealso{
\code{\link[clhs]{clhs}}
}
\concept{
simulated annealing

spatial trend
}
\keyword{iteration}
\keyword{optimize}
\keyword{spatial}

